# -*- coding: utf-8 -*-
"""Final.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_Rb5fEDAotNFYbYHqfaFLZzHEbUaJZdh
"""

# Install required libraries (if not already installed)
!pip install gradio tensorflow numpy pillow

# Import necessary libraries
import tensorflow as tf
import numpy as np
from tensorflow.keras.models import load_model
from tensorflow.keras.preprocessing import image
from PIL import Image
import gradio as gr

# Mount Google Drive (only needed if model is stored there)
from google.colab import drive
drive.mount('/content/drive')

# Load the saved model from Google Drive
model_path = "/content/drive/MyDrive/skin_disease_model.h5"  # Update with your correct path
model = load_model(model_path)

# Define class names
class_names = ['cellulitis', 'impetigo', 'athlete-foot', 'nail-fungus', 'ring worm',
               'cutaneous-larva-migrans', 'chickenpox', 'shingles']

# Function to preprocess and predict the image
def predict_image(img):
    img = img.resize((224, 224))  # Resize for model input
    img = np.array(img) / 255.0  # Normalize pixel values
    img = np.expand_dims(img, axis=0)  # Add batch dimension

    predictions = model.predict(img)
    confidence = np.max(predictions)  # Get highest confidence score
    predicted_class_index = np.argmax(predictions)

    if confidence < 0.80:  # Reject uncertain predictions
        return "Cannot Predict [Please re-upload 😔]", confidence

    return class_names[predicted_class_index], confidence * 100  # Confidence in percentage

# Gradio Interface for user interaction
app = gr.Interface(
    fn=predict_image,
    inputs=gr.Image(type="pil"),
    outputs=[gr.Text(label="Predicted Skin Disease 🔍"), gr.Number(label="Confidence Score")],
    title="🩺 Derma-AI 🩺",
    description="\n\n🔍 **Upload an image of a skin condition**, and let **Derma-AI** analyze it using deep learning.\n\n"
                "📸 Simply **upload a clear image**, and get an instant prediction along with a confidence score.\n\n"
                "⚠️ **Note:** This AI tool is for preliminary assessment only. Always consult a **dermatologist** for a professional diagnosis.\n\n"
                "👩‍⚕️ **Stay informed. Stay healthy.** 💙",
)

# Launch the Gradio app
app.launch()

